<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdu.laborder.mapper.SysMenuMapper">
    <resultMap type="com.bdu.laborder.common.core.domain.entity.SysMenu" id="SysMenuResult">
        <id     property="menuId"         column="menu_id"        />
        <result property="menuName"       column="menu_name"      />
        <result property="parentName"     column="parent_name"    />
        <result property="parentId"       column="parent_id"      />
        <result property="orderNum"       column="order_num"      />
        <result property="path"           column="path"           />
        <result property="component"      column="component"      />
        <result property="isFrame"        column="is_frame"       />
        <result property="isCache"        column="is_cache"       />
        <result property="menuType"       column="menu_type"      />
        <result property="visible"        column="visible"        />
        <result property="status"         column="status"         />
        <result property="perms"          column="perms"          />
        <result property="icon"           column="icon"           />
        <result property="createBy"       column="create_by"      />
        <result property="createTime"     column="create_time"    />
        <result property="updateTime"     column="update_time"    />
        <result property="updateBy"       column="update_by"      />
        <result property="remark"         column="remark"         />
    </resultMap>

    <sql id="selectMenuVo">
        select menu_id, menu_name, parent_id, order_num, path, component, is_frame, is_cache, menu_type, visible, status, ifnull(perms,'') as perms, icon, create_time
        from s_menu
    </sql>

    <select id="selectMenuList" resultMap="SysMenuResult">
        <include refid="selectMenuVo" />
        <where>
            <if test="menuName != null and menuName != ''"> AND menu_name like concat('%',#{menuName},'%')</if>
            <if test="visible != null and visible != ''"> AND visible = #{visible}</if>
            <if test="status != null and status != ''"> AND status = #{status}</if>
        </where>
        order by parent_id,order_num
    </select>

    <select id="selectMenuListByUserId" resultMap="SysMenuResult">
        select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time
        from s_menu m
        left join s_role_menu rm on m.menu_id = rm.menu_id
        left join s_user_role ur on rm.role_id = ur.role_id
        left join s_role ro on ur.role_id = ro.role_id
        where ur.user_id = #{params.userId}
        <if test="menuName != null and menuName != ''">
            AND menu_name like concat('%', #{menuName}, '%')
        </if>
        <if test="visible != null and visible != ''">
            AND visible = #{visible}
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        order by m.parent_id, m.order_num
    </select>

    <select id="checkMenuNameUnique" resultMap="SysMenuResult">
        <include refid="selectMenuVo" />
        where menu_name = #{menuName} and parent_id = #{parentId} limit 1
    </select>

    <insert id="insertMenu">
        insert into s_menu (
        <if test="menuId != null and menuId != ''">menu_id,</if>
        <if test="parentId != null and parentId != ''">parent_id,</if>
        <if test="menuName != null and menuName != ''">menu_name,</if>
        <if test="orderNum != null">order_num,</if>
        <if test="path != null and path != ''">path,</if>
        <if test="component != null and component != ''">component,</if>
        <if test="isFrame != null and isFrame != ''">is_frame,</if>
        <if test="isCache != null and isCache != ''">is_cache,</if>
        <if test="menuType != null and menuType != ''">menu_type,</if>
        <if test="visible != null">visible,</if>
        <if test="status != null">status,</if>
        <if test="perms !=null and perms != ''">perms,</if>
        <if test="icon != null and icon != ''">icon,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        ) values (
        <if test="menuId != null and menuId != ''">#{menuId},</if>
        <if test="parentId != null and parentId != ''">#{parentId},</if>
        <if test="menuName != null and menuName != ''">#{menuName},</if>
        <if test="orderNum != null">#{orderNum},</if>
        <if test="path != null and path != ''">#{path},</if>
        <if test="component != null and component != ''">#{component},</if>
        <if test="isFrame != null and isFrame != ''">#{isFrame},</if>
        <if test="isCache != null and isCache != ''">#{isCache},</if>
        <if test="menuType != null and menuType != ''">#{menuType},</if>
        <if test="visible != null">#{visible},</if>
        <if test="status != null">#{status},</if>
        <if test="perms !=null and perms != ''">#{perms},</if>
        <if test="icon != null and icon != ''">#{icon},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>

    <select id="selectMenuById" resultMap="SysMenuResult">
        <include refid="selectMenuVo" />
        where menu_id = #{menuId}
    </select>

    <update id="updateMenu">
        update s_menu
        <set>
            <if test="parentId != null and parentId != ''">parent_id = #{parentId},</if>
            <if test="menuName != null and menuName != ''">menu_name = #{menuName},</if>
            <if test="orderNum != null">order_num = #{orderNum},</if>
            <if test="path != null and path != ''">path = #{path},</if>
            <if test="component != null and component != ''">component = #{component},</if>
            <if test="isFrame != null and isFrame != ''">is_frame = #{isFrame},</if>
            <if test="isCache != null and isCache != ''">is_cache = #{isCache},</if>
            <if test="menuType != null and menuType != ''">menu_type = #{menuType},</if>
            <if test="visible != null">visible = #{visible},</if>
            <if test="status != null">status = #{status},</if>
            <if test="perms !=null and perms != ''">perms = #{perms},</if>
            <if test="icon != null and icon != ''">icon = #{icon},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where menu_id = #{menuId}
    </update>

    <delete id="deleteMenuById">
        delete from s_menu where menu_id = #{menuId}
    </delete>

    <select id="hasChildByMenuId" resultType="int">
        select count(1) from s_menu where parent_id = #{menuId}
    </select>

    <select id="selectMenuListByRoleId" resultType="java.lang.String">
        select m.menu_id
        from s_menu m
        left join s_role_menu rm on m.menu_id = rm.menu_id
        where rm.role_id = #{roleId}
        <if test="menuCheckStrictly">
            and m.menu_id not in (
                select m.parent_id
                from s_menu m
                inner join s_role_menu rm
                on m.menu_id = rm.menu_id and rm.role_id = #{roleId}
            )
        </if>
    </select>

    <select id="selectMenuTreeAll" resultMap="SysMenuResult">
        select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time
        from s_menu m where m.menu_type in ('M', 'C') and m.status = 0
        order by m.parent_id, m.order_num
    </select>

    <select id="selectMenuTreeByUserId" resultMap="SysMenuResult">
        select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time
        from s_menu m
        left join s_role_menu rm on m.menu_id = rm.menu_id
        left join s_user_role ur on rm.role_id = ur.role_id
        left join s_role ro on ur.role_id = ro.role_id
        left join s_user u on ur.user_id = u.user_id
        where u.user_id = #{userId} and m.menu_type in ('M', 'C') and m.status = 0  AND ro.status = 0
        order by m.parent_id, m.order_num
    </select>
</mapper>
